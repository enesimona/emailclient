{"version":3,"file":"main-es2015.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth-http-interceptor.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/signin/signin.component.ts","./src/app/auth/signout/signout.component.ts","./src/app/auth/signup/signup.component.ts","./src/app/auth/validators/match-password.ts","./src/app/auth/validators/unique-username.ts","./src/app/shared/input/input.component.ts","./src/app/shared/modal/modal.component.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.html","./src/app/auth/signin/signin.component.html","./src/app/auth/signout/signout.component.html","./src/app/auth/signup/signup.component.html","./src/app/shared/input/input.component.html","./src/app/shared/modal/modal.component.html"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path:'inbox', \n    canLoad: [AuthGuard],\n    loadChildren:()=>import('./inbox/inbox.module').then(mod=>mod.InboxModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  signedIn$: BehaviorSubject<boolean>;\n\n  constructor(private authService:AuthService){\n    this.signedIn$=this.authService.signedIn$;\n  }\n  ngOnInit(): void {\n    this.authService.checkAuth().subscribe(()=>{});\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthHttpInterceptor } from './auth/auth-http-interceptor';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule, \n    AppRoutingModule, \n    AuthModule, \n    HttpClientModule,\n    MatButtonModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthHttpInterceptor, multi:true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { filter, tap } from \"rxjs/operators\";\n/**\n * \n */\n\n@Injectable({\n    providedIn:'root'\n})\nexport class AuthHttpInterceptor implements HttpInterceptor{\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n        const modifiedReq=req.clone({\n            withCredentials:true\n        })\n        return next.handle(modifiedReq);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignoutComponent } from './signout/signout.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'signout', component: SignoutComponent},\n  { path: '', component: SigninComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {take, skipWhile, tap} from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService:AuthService, private router:Router){}\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n    return this.authService.signedIn$.pipe(\n      skipWhile(value=>value===null), \n      take(1), \n      tap((isSignedIn)=>{\n        if(!isSignedIn){ \n          this.router.navigateByUrl('/');\n        }\n      })\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { SignoutComponent } from './signout/signout.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n@NgModule({\n  declarations: [SigninComponent, SignupComponent, SignoutComponent, ],\n  imports: [CommonModule, AuthRoutingModule, ReactiveFormsModule, SharedModule, MatButtonModule]\n})\nexport class AuthModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SignupComponent } from './signup/signup.component';\nimport { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { SignedInResponse } from '../shared/dto/signed-in-response';\nimport { SignupCredentials } from '../shared/dto/signup-credentials';\nimport { UsernameAvailableResponse } from '../shared/dto/username-available-response';\nimport { SignupResponse } from '../shared/dto/signup-response';\nimport { SigninCredentials } from '../shared/dto/signin-credentials';\nimport { SignInResponse } from '../shared/dto/sign-in-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootURL = 'https://api.angular-email.com';\n  signedIn$ = new BehaviorSubject(null);\n  username='';\n\n  constructor(private http: HttpClient) {}\n\n  usernameAvailable(username: string) {\n    return this.http.post<UsernameAvailableResponse>(\n      `${this.rootURL}/auth/username`,\n      {\n        username\n      }\n    );\n  }\n\n  signup(credentials: SignupCredentials){\n    return this.http.post<SignupResponse>(\n      `${this.rootURL}/auth/signup`, credentials, \n    ).pipe(\n      tap((response)=>{\n        this.signedIn$.next(true);\n        this.username=response.username;\n      })\n    );\n  }\n\n  checkAuth() {\n    return this.http.get<SignedInResponse>(\n      `${this.rootURL}/auth/signedin`, \n    )\n    .pipe(\n      tap(({authenticated, username})=>{\n       this.signedIn$.next(authenticated);\n       this.username=username;\n      })\n    )\n  }\n\n  signOut() {\n    //delete cookie - token after sign out\n    return this.http.post<any>(`${this.rootURL}/auth/signout`, {})\n    .pipe(\n      tap(()=>{\n        this.signedIn$.next(false);\n      })\n    )\n  }\n\n  signIn(signinCredentials: SigninCredentials){\n    return this.http.post<SignInResponse>(`${this.rootURL}/auth/signin`, signinCredentials)\n    .pipe(\n      tap((response)=>{\n        this.signedIn$.next(true);\n        this.username=response.username;\n      })\n    )\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  signInForm = new FormGroup(\n    {\n      username: new FormControl('', [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(20)\n        ]\n      ),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n    },\n    { validators: [] }\n  );\n\n  constructor(private authService:AuthService, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    if(this.signInForm.invalid){\n      return;\n    }\n  \n    this.authService.signIn(this.signInForm.value).subscribe({\n      next: ()=>{\n        this.router.navigateByUrl('/inbox');\n      },\n      error:({error})=>{\n        if(error.username || error.password) {\n          this.signInForm.setErrors({credentials:true})\n        }\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signout',\n  templateUrl: './signout.component.html',\n  styleUrls: ['./signout.component.css']\n})\nexport class SignoutComponent implements OnInit {\n\n  constructor(private authService: AuthService, \n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.signOut().subscribe(()=> {\n      //navigate the user back to a signin page \n      this.router.navigateByUrl('/');\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { MatchPassword } from '../validators/match-password';\nimport { UniqueUsername } from '../validators/unique-username';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  authForm = new FormGroup(\n    {\n      username: new FormControl(\n        '',\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(20),\n          Validators.pattern(/^[a-z0-9]+$/)\n        ],\n        [this.uniqueUsername.validate]\n      ),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n      passwordConfirmation: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ])\n    },\n    { validators: [this.matchPassword.validate] }\n  );\n\n  constructor(\n    private matchPassword: MatchPassword,\n    private uniqueUsername: UniqueUsername,\n    private authService:AuthService,\n    private router:Router\n  ) {}\n\n  ngOnInit() {}\n\n  onSubmit(){\n    if(this.authForm.invalid){\n      return;\n    }\n    this.authService.signup(this.authForm.value).subscribe({\n      next: (response) => {\n        //navigate to some other route\n        this.router.navigateByUrl('/inbox');\n      },\n      complete: () => {\n\n      },\n      error: (err) => {\n        if(!err.status){\n          this.authForm.setErrors({noConnection:true})\n        }else{\n          this.authForm.setErrors({unkownError:true})\n        }\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Validator, FormGroup } from '@angular/forms';\n\n@Injectable({ providedIn: 'root' })\nexport class MatchPassword implements Validator {\n  validate(formGroup: FormGroup) {\n    const { password, passwordConfirmation } = formGroup.value;\n\n    if (password === passwordConfirmation) {\n      return null;\n    } else {\n      return { passwordsDontMatch: true };\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AsyncValidator, FormControl } from '@angular/forms';\nimport { map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueUsername implements AsyncValidator {\n  constructor(private authService: AuthService) {}\n\n  validate = (control: FormControl) => {\n    const { value } = control;\n\n    return this.authService.usernameAvailable(value).pipe(\n      map(value => {\n        if (value.available) {\n          return null;\n        }\n      }),\n      catchError(err => {\n        if (err.error.username) {\n          return of({ nonUniqueUsername: true });\n        } else {\n          return of({ noConnection: true });\n        }\n      })\n    );\n  };\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css']\n})\nexport class InputComponent implements OnInit {\n  @Input() label: string;\n  @Input() control: FormControl;\n  @Input() inputType: string;\n  @Input() controlType='input';\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  showErrors() {\n    const { dirty, touched, errors } = this.control;\n    return dirty && touched && errors;\n  }\n}\n","import { Component, OnInit, ElementRef, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n  @Output() dismiss=new EventEmitter();\n\n\n  constructor(private el:ElementRef) { }\n\n  ngOnInit() {\n    document.body.appendChild(this.el.nativeElement);\n  }\n\n  ngOnDestroy(){\n    this.el.nativeElement.remove();\n  }\n\n  onDismissClick(){\n    this.dismiss.emit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { InputComponent } from './input/input.component';\nimport { ModalComponent } from './modal/modal.component';\n\n@NgModule({\n  declarations: [InputComponent, ModalComponent],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [InputComponent, ModalComponent]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export default \"<div class=\\\"ui container\\\">\\n    <div class=\\\"ui secondary pointing menu\\\">\\n        <a routerLink=\\\"/\\\" class=\\\"item logo\\\">Mailbox</a>\\n\\n        <div class=\\\"right menu\\\">\\n            <ng-container *ngIf=\\\"signedIn$ | async\\\">\\n                <a routerLink=\\\"/inbox\\\" class=\\\"ui item\\\" routerLinkActive=\\\"active\\\">Inbox</a>\\n                <a routerLink=\\\"/signout\\\" class=\\\"ui item\\\" routerLinkActive=\\\"active\\\">Sign Out</a>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!(signedIn$ | async)\\\">\\n                <a routerLink=\\\"/\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"ui item\\\" routerLinkActive=\\\"active\\\">Sign In</a>\\n                <a routerLink=\\\"/signup\\\" class=\\\"ui item\\\" routerLinkActive=\\\"active\\\">Sign Up</a>\\n            </ng-container>\\n        </div>\\n    </div>\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\";","export default \"<h3>Sign In</h3>\\n<form class=\\\"ui form\\\" [formGroup]=\\\"signInForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <app-input\\n    inputType=\\\"text\\\"\\n    label=\\\"Username\\\"\\n    [control]=\\\"signInForm.get('username')\\\"\\n  ></app-input>\\n  <app-input\\n    inputType=\\\"password\\\"\\n    label=\\\"Password\\\"\\n    [control]=\\\"signInForm.get('password')\\\"\\n  ></app-input>\\n\\n  <div\\n    *ngIf=\\\"\\n      signInForm.errors\\n    \\\"\\n    class=\\\"ui red basic label\\\"\\n  >\\n    <p *ngIf=\\\"signInForm.errors.credentials\\\">\\n      Invalid username or password.\\n    </p>\\n  </div>\\n\\n  <div>\\n    <button mat-button class=\\\"mat-raised-button mat-accent\\\">\\n      Submit\\n    </button>\\n  </div>\\n\\n</form>\\n\";","export default \"<p>Signing out...</p>\\n\";","export default \"<h3>Create an Account</h3>\\n<form class=\\\"ui form\\\" [formGroup]=\\\"authForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <app-input\\n    inputType=\\\"text\\\"\\n    label=\\\"Username\\\"\\n    [control]=\\\"authForm.get('username')\\\"\\n  ></app-input>\\n  <app-input\\n    inputType=\\\"password\\\"\\n    label=\\\"Password\\\"\\n    [control]=\\\"authForm.get('password')\\\"\\n  ></app-input>\\n  <app-input\\n    inputType=\\\"password\\\"\\n    label=\\\"Password Confirmation\\\"\\n    [control]=\\\"authForm.get('passwordConfirmation')\\\"\\n  ></app-input>\\n\\n  <div\\n    *ngIf=\\\"\\n      authForm.get('password').touched &&\\n      authForm.get('passwordConfirmation').touched &&\\n      authForm.errors\\n    \\\"\\n    class=\\\"ui red basic label\\\"\\n  >\\n    <p *ngIf=\\\"authForm.errors.passwordsDontMatch\\\">\\n      Password and Password Confirmation must match.\\n    </p>\\n    <p *ngIf=\\\"authForm.errors.noConnection\\\">\\n      No internet connection detected, failed to sign up.\\n    </p>\\n    <p *ngIf=\\\"authForm.errors.unkownError\\\">\\n      Unknown error.\\n    </p>\\n  </div>\\n\\n  <div>\\n    <button mat-button class=\\\"mat-raised-button mat-accent\\\">\\n      Submit\\n    </button>\\n  </div>\\n\\n</form>\\n\";","export default \"<div class=\\\"field\\\">\\n  <label>{{ label }}</label>\\n\\n\\n  <input [type]=\\\"inputType\\\" [formControl]=\\\"control\\\" *ngIf=\\\"controlType==='input'\\\"/>\\n\\n  <textarea *ngIf=\\\"controlType==='textarea'\\\" [formControl]=\\\"control\\\"></textarea>\\n  <div *ngIf=\\\"showErrors()\\\" class=\\\"ui pointing red basic label\\\">\\n    <p *ngIf=\\\"control.errors.required\\\">\\n      Value is required\\n    </p>\\n    <p *ngIf=\\\"control.errors.email\\\">\\n      Enter a valid email\\n    </p>\\n    <p *ngIf=\\\"control.errors.minlength\\\">\\n      Value you entered is\\n      {{ control.errors.minlength.actualLength }}\\n      characters long, but it must be at aleast\\n      {{ control.errors.minlength.requiredLength }}\\n      characters\\n    </p>\\n    <p *ngIf=\\\"control.errors.maxlength\\\">\\n      Value you entered is\\n      {{ control.errors.maxlength.actualLength }}\\n      characters long, but it cannot be longer than\\n      {{ control.errors.maxlength.requiredLength }}\\n      characters\\n    </p>\\n    <p *ngIf=\\\"control.errors.pattern\\\">\\n      Invalid format\\n    </p>\\n    <p *ngIf=\\\"control.errors.nonUniqueUsername\\\">\\n      Username is taken\\n    </p>\\n    <p *ngIf=\\\"control.errors.noConnection\\\">\\n      Can't tell if username is taken\\n    </p>\\n  </div>\\n</div>\\n\";","export default \"<div (click)=\\\"onDismissClick()\\\" class=\\\"ui dimmer visible active\\\">\\n    <div class=\\\"ui modal visible active\\\" (click)=\\\"$event.stopPropagation()\\\">\\n        <i class=\\\"close icon\\\" (click)=\\\"onDismissClick()\\\"></i>\\n        <div class=\\\"header\\\">\\n            <ng-content select=\\\"[modalTitle]\\\"></ng-content>\\n        </div>\\n        <div class=\\\"content\\\">\\n            <ng-content></ng-content>\\n        </div>\\n        <div class=\\\"actions actions-default\\\">\\n            <button (click)=\\\"onDismissClick()\\\" class=\\\"ui button primary\\\">Ok</button>\\n        </div>\\n        <div class=\\\"actions\\\">\\n            <ng-content select=\\\"[modalFooter]\\\"></ng-content>\\n        </div>\\n    </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}