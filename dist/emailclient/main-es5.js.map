{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","routes","path","canLoad","_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__","loadChildren","__webpack_require__","then","mod","InboxModule","AppRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","AppComponent","authService","signedIn$","checkAuth","subscribe","_auth_auth_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","AppModule","declarations","_app_component__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__","_app_routing_module__WEBPACK_IMPORTED_MODULE_0__","_auth_auth_module__WEBPACK_IMPORTED_MODULE_2__","_angular_common_http__WEBPACK_IMPORTED_MODULE_8__","_angular_material_button__WEBPACK_IMPORTED_MODULE_9__","_angular_service_worker__WEBPACK_IMPORTED_MODULE_10__","enabled","_environments_environment__WEBPACK_IMPORTED_MODULE_4__","registrationStrategy","providers","provide","useClass","_auth_auth_http_interceptor__WEBPACK_IMPORTED_MODULE_3__","multi","bootstrap","AuthHttpInterceptor","req","next","modifiedReq","clone","withCredentials","handle","providedIn","component","_signup_signup_component__WEBPACK_IMPORTED_MODULE_2__","_signout_signout_component__WEBPACK_IMPORTED_MODULE_1__","_signin_signin_component__WEBPACK_IMPORTED_MODULE_0__","AuthRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","AuthGuard","router","route","segments","pipe","value","isSignedIn","navigateByUrl","_auth_service__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","AuthModule","_signin_signin_component__WEBPACK_IMPORTED_MODULE_1__","_signout_signout_component__WEBPACK_IMPORTED_MODULE_4__","_angular_common__WEBPACK_IMPORTED_MODULE_7__","_auth_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_3__","AuthService","http","rxjs__WEBPACK_IMPORTED_MODULE_0__","username","post","rootURL","credentials","response","get","authenticated","signinCredentials","_angular_common_http__WEBPACK_IMPORTED_MODULE_2__","SigninComponent","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","password","validators","signInForm","invalid","signIn","error","setErrors","_auth_service__WEBPACK_IMPORTED_MODULE_2__","SignoutComponent","signOut","SignupComponent","matchPassword","uniqueUsername","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","validate","passwordConfirmation","authForm","signup","complete","err","status","noConnection","unkownError","_validators_match_password__WEBPACK_IMPORTED_MODULE_3__","_validators_unique_username__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_6__","MatchPassword","formGroup","passwordsDontMatch","UniqueUsername","control","usernameAvailable","available","nonUniqueUsername","InputComponent","dirty","touched","errors","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ModalComponent","el","document","body","appendChild","nativeElement","remove","dismiss","emit","SharedModule","_input_input_component__WEBPACK_IMPORTED_MODULE_0__","_modal_modal_component__WEBPACK_IMPORTED_MODULE_1__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","environment","production","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__","console","__webpack_exports__"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-http-interceptor.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/signin/signin.component.ts","webpack:///src/app/auth/signout/signout.component.ts","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/validators/match-password.ts","webpack:///src/app/auth/validators/unique-username.ts","webpack:///src/app/shared/input/input.component.ts","webpack:///src/app/shared/modal/modal.component.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/app/app.component.html","webpack:///src/app/auth/signin/signin.component.html","webpack:///src/app/auth/signout/signout.component.html","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/shared/input/input.component.html","webpack:///src/app/shared/modal/modal.component.html"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path:'inbox', \n    canLoad: [AuthGuard],\n    loadChildren:()=>import('./inbox/inbox.module').then(mod=>mod.InboxModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  signedIn$: BehaviorSubject<boolean>;\n\n  constructor(private authService:AuthService){\n    this.signedIn$=this.authService.signedIn$;\n  }\n  ngOnInit(): void {\n    this.authService.checkAuth().subscribe(()=>{});\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthHttpInterceptor } from './auth/auth-http-interceptor';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule, \n    AppRoutingModule, \n    AuthModule, \n    HttpClientModule,\n    MatButtonModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthHttpInterceptor, multi:true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { filter, tap } from \"rxjs/operators\";\n/**\n * \n */\n\n@Injectable({\n    providedIn:'root'\n})\nexport class AuthHttpInterceptor implements HttpInterceptor{\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n        const modifiedReq=req.clone({\n            withCredentials:true\n        })\n        return next.handle(modifiedReq);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignoutComponent } from './signout/signout.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'signout', component: SignoutComponent},\n  { path: '', component: SigninComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {take, skipWhile, tap} from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService:AuthService, private router:Router){}\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n    return this.authService.signedIn$.pipe(\n      skipWhile(value=>value===null), \n      take(1), \n      tap((isSignedIn)=>{\n        if(!isSignedIn){ \n          this.router.navigateByUrl('/');\n        }\n      })\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { SignoutComponent } from './signout/signout.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n@NgModule({\n  declarations: [SigninComponent, SignupComponent, SignoutComponent, ],\n  imports: [CommonModule, AuthRoutingModule, ReactiveFormsModule, SharedModule, MatButtonModule]\n})\nexport class AuthModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SignupComponent } from './signup/signup.component';\nimport { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { SignedInResponse } from '../shared/dto/signed-in-response';\nimport { SignupCredentials } from '../shared/dto/signup-credentials';\nimport { UsernameAvailableResponse } from '../shared/dto/username-available-response';\nimport { SignupResponse } from '../shared/dto/signup-response';\nimport { SigninCredentials } from '../shared/dto/signin-credentials';\nimport { SignInResponse } from '../shared/dto/sign-in-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootURL = 'https://api.angular-email.com';\n  signedIn$ = new BehaviorSubject(null);\n  username='';\n\n  constructor(private http: HttpClient) {}\n\n  usernameAvailable(username: string) {\n    return this.http.post<UsernameAvailableResponse>(\n      `${this.rootURL}/auth/username`,\n      {\n        username\n      }\n    );\n  }\n\n  signup(credentials: SignupCredentials){\n    return this.http.post<SignupResponse>(\n      `${this.rootURL}/auth/signup`, credentials, \n    ).pipe(\n      tap((response)=>{\n        this.signedIn$.next(true);\n        this.username=response.username;\n      })\n    );\n  }\n\n  checkAuth() {\n    return this.http.get<SignedInResponse>(\n      `${this.rootURL}/auth/signedin`, \n    )\n    .pipe(\n      tap(({authenticated, username})=>{\n       this.signedIn$.next(authenticated);\n       this.username=username;\n      })\n    )\n  }\n\n  signOut() {\n    //delete cookie - token after sign out\n    return this.http.post<any>(`${this.rootURL}/auth/signout`, {})\n    .pipe(\n      tap(()=>{\n        this.signedIn$.next(false);\n      })\n    )\n  }\n\n  signIn(signinCredentials: SigninCredentials){\n    return this.http.post<SignInResponse>(`${this.rootURL}/auth/signin`, signinCredentials)\n    .pipe(\n      tap((response)=>{\n        this.signedIn$.next(true);\n        this.username=response.username;\n      })\n    )\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  signInForm = new FormGroup(\n    {\n      username: new FormControl('', [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(20)\n        ]\n      ),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n    },\n    { validators: [] }\n  );\n\n  constructor(private authService:AuthService, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    if(this.signInForm.invalid){\n      return;\n    }\n  \n    this.authService.signIn(this.signInForm.value).subscribe({\n      next: ()=>{\n        this.router.navigateByUrl('/inbox');\n      },\n      error:({error})=>{\n        if(error.username || error.password) {\n          this.signInForm.setErrors({credentials:true})\n        }\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signout',\n  templateUrl: './signout.component.html',\n  styleUrls: ['./signout.component.css']\n})\nexport class SignoutComponent implements OnInit {\n\n  constructor(private authService: AuthService, \n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.signOut().subscribe(()=> {\n      //navigate the user back to a signin page \n      this.router.navigateByUrl('/');\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { MatchPassword } from '../validators/match-password';\nimport { UniqueUsername } from '../validators/unique-username';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  authForm = new FormGroup(\n    {\n      username: new FormControl(\n        '',\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(20),\n          Validators.pattern(/^[a-z0-9]+$/)\n        ],\n        [this.uniqueUsername.validate]\n      ),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n      passwordConfirmation: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ])\n    },\n    { validators: [this.matchPassword.validate] }\n  );\n\n  constructor(\n    private matchPassword: MatchPassword,\n    private uniqueUsername: UniqueUsername,\n    private authService:AuthService,\n    private router:Router\n  ) {}\n\n  ngOnInit() {}\n\n  onSubmit(){\n    if(this.authForm.invalid){\n      return;\n    }\n    this.authService.signup(this.authForm.value).subscribe({\n      next: (response) => {\n        //navigate to some other route\n        this.router.navigateByUrl('/inbox');\n      },\n      complete: () => {\n\n      },\n      error: (err) => {\n        if(!err.status){\n          this.authForm.setErrors({noConnection:true})\n        }else{\n          this.authForm.setErrors({unkownError:true})\n        }\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Validator, FormGroup } from '@angular/forms';\n\n@Injectable({ providedIn: 'root' })\nexport class MatchPassword implements Validator {\n  validate(formGroup: FormGroup) {\n    const { password, passwordConfirmation } = formGroup.value;\n\n    if (password === passwordConfirmation) {\n      return null;\n    } else {\n      return { passwordsDontMatch: true };\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AsyncValidator, FormControl } from '@angular/forms';\nimport { map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueUsername implements AsyncValidator {\n  constructor(private authService: AuthService) {}\n\n  validate = (control: FormControl) => {\n    const { value } = control;\n\n    return this.authService.usernameAvailable(value).pipe(\n      map(value => {\n        if (value.available) {\n          return null;\n        }\n      }),\n      catchError(err => {\n        if (err.error.username) {\n          return of({ nonUniqueUsername: true });\n        } else {\n          return of({ noConnection: true });\n        }\n      })\n    );\n  };\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css']\n})\nexport class InputComponent implements OnInit {\n  @Input() label: string;\n  @Input() control: FormControl;\n  @Input() inputType: string;\n  @Input() controlType='input';\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  showErrors() {\n    const { dirty, touched, errors } = this.control;\n    return dirty && touched && errors;\n  }\n}\n","import { Component, OnInit, ElementRef, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n  @Output() dismiss=new EventEmitter();\n\n\n  constructor(private el:ElementRef) { }\n\n  ngOnInit() {\n    document.body.appendChild(this.el.nativeElement);\n  }\n\n  ngOnDestroy(){\n    this.el.nativeElement.remove();\n  }\n\n  onDismissClick(){\n    this.dismiss.emit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { InputComponent } from './input/input.component';\nimport { ModalComponent } from './modal/modal.component';\n\n@NgModule({\n  declarations: [InputComponent, ModalComponent],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [InputComponent, ModalComponent]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export default \"<div class=\\\"ui container\\\">\\n    <div class=\\\"ui secondary pointing menu\\\">\\n        <a routerLink=\\\"/\\\" class=\\\"item logo\\\">Mailbox</a>\\n\\n        <div class=\\\"right menu\\\">\\n            <ng-container *ngIf=\\\"signedIn$ | async\\\">\\n                <a routerLink=\\\"/inbox\\\" class=\\\"ui item\\\" routerLinkActive=\\\"active\\\">Inbox</a>\\n                <a routerLink=\\\"/signout\\\" class=\\\"ui item\\\" routerLinkActive=\\\"active\\\">Sign Out</a>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!(signedIn$ | async)\\\">\\n                <a routerLink=\\\"/\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"ui item\\\" routerLinkActive=\\\"active\\\">Sign In</a>\\n                <a routerLink=\\\"/signup\\\" class=\\\"ui item\\\" routerLinkActive=\\\"active\\\">Sign Up</a>\\n            </ng-container>\\n        </div>\\n    </div>\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\";","export default \"<h3>Sign In</h3>\\n<form class=\\\"ui form\\\" [formGroup]=\\\"signInForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <app-input\\n    inputType=\\\"text\\\"\\n    label=\\\"Username\\\"\\n    [control]=\\\"signInForm.get('username')\\\"\\n  ></app-input>\\n  <app-input\\n    inputType=\\\"password\\\"\\n    label=\\\"Password\\\"\\n    [control]=\\\"signInForm.get('password')\\\"\\n  ></app-input>\\n\\n  <div\\n    *ngIf=\\\"\\n      signInForm.errors\\n    \\\"\\n    class=\\\"ui red basic label\\\"\\n  >\\n    <p *ngIf=\\\"signInForm.errors.credentials\\\">\\n      Invalid username or password.\\n    </p>\\n  </div>\\n\\n  <div>\\n    <button mat-button class=\\\"mat-raised-button mat-accent\\\">\\n      Submit\\n    </button>\\n  </div>\\n\\n</form>\\n\";","export default \"<p>Signing out...</p>\\n\";","export default \"<h3>Create an Account</h3>\\n<form class=\\\"ui form\\\" [formGroup]=\\\"authForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <app-input\\n    inputType=\\\"text\\\"\\n    label=\\\"Username\\\"\\n    [control]=\\\"authForm.get('username')\\\"\\n  ></app-input>\\n  <app-input\\n    inputType=\\\"password\\\"\\n    label=\\\"Password\\\"\\n    [control]=\\\"authForm.get('password')\\\"\\n  ></app-input>\\n  <app-input\\n    inputType=\\\"password\\\"\\n    label=\\\"Password Confirmation\\\"\\n    [control]=\\\"authForm.get('passwordConfirmation')\\\"\\n  ></app-input>\\n\\n  <div\\n    *ngIf=\\\"\\n      authForm.get('password').touched &&\\n      authForm.get('passwordConfirmation').touched &&\\n      authForm.errors\\n    \\\"\\n    class=\\\"ui red basic label\\\"\\n  >\\n    <p *ngIf=\\\"authForm.errors.passwordsDontMatch\\\">\\n      Password and Password Confirmation must match.\\n    </p>\\n    <p *ngIf=\\\"authForm.errors.noConnection\\\">\\n      No internet connection detected, failed to sign up.\\n    </p>\\n    <p *ngIf=\\\"authForm.errors.unkownError\\\">\\n      Unknown error.\\n    </p>\\n  </div>\\n\\n  <div>\\n    <button mat-button class=\\\"mat-raised-button mat-accent\\\">\\n      Submit\\n    </button>\\n  </div>\\n\\n</form>\\n\";","export default \"<div class=\\\"field\\\">\\n  <label>{{ label }}</label>\\n\\n\\n  <input [type]=\\\"inputType\\\" [formControl]=\\\"control\\\" *ngIf=\\\"controlType==='input'\\\"/>\\n\\n  <textarea *ngIf=\\\"controlType==='textarea'\\\" [formControl]=\\\"control\\\"></textarea>\\n  <div *ngIf=\\\"showErrors()\\\" class=\\\"ui pointing red basic label\\\">\\n    <p *ngIf=\\\"control.errors.required\\\">\\n      Value is required\\n    </p>\\n    <p *ngIf=\\\"control.errors.email\\\">\\n      Enter a valid email\\n    </p>\\n    <p *ngIf=\\\"control.errors.minlength\\\">\\n      Value you entered is\\n      {{ control.errors.minlength.actualLength }}\\n      characters long, but it must be at aleast\\n      {{ control.errors.minlength.requiredLength }}\\n      characters\\n    </p>\\n    <p *ngIf=\\\"control.errors.maxlength\\\">\\n      Value you entered is\\n      {{ control.errors.maxlength.actualLength }}\\n      characters long, but it cannot be longer than\\n      {{ control.errors.maxlength.requiredLength }}\\n      characters\\n    </p>\\n    <p *ngIf=\\\"control.errors.pattern\\\">\\n      Invalid format\\n    </p>\\n    <p *ngIf=\\\"control.errors.nonUniqueUsername\\\">\\n      Username is taken\\n    </p>\\n    <p *ngIf=\\\"control.errors.noConnection\\\">\\n      Can't tell if username is taken\\n    </p>\\n  </div>\\n</div>\\n\";","export default \"<div (click)=\\\"onDismissClick()\\\" class=\\\"ui dimmer visible active\\\">\\n    <div class=\\\"ui modal visible active\\\" (click)=\\\"$event.stopPropagation()\\\">\\n        <i class=\\\"close icon\\\" (click)=\\\"onDismissClick()\\\"></i>\\n        <div class=\\\"header\\\">\\n            <ng-content select=\\\"[modalTitle]\\\"></ng-content>\\n        </div>\\n        <div class=\\\"content\\\">\\n            <ng-content></ng-content>\\n        </div>\\n        <div class=\\\"actions actions-default\\\">\\n            <button (click)=\\\"onDismissClick()\\\" class=\\\"ui button primary\\\">Ok</button>\\n        </div>\\n        <div class=\\\"actions\\\">\\n            <ng-content select=\\\"[modalFooter]\\\"></ng-content>\\n        </div>\\n    </div>\\n</div>\";"]}